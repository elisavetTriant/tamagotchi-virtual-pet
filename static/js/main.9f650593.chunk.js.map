{"version":3,"sources":["utils/helpers.js","components/Copyright.js","assets/character/born-pet.svg","assets/character/dead-pet.svg","assets/character/disaster-pet.svg","assets/character/exercise-pet.svg","assets/character/food-pet.svg","assets/character/happy-pet.svg","assets/character/mischief-pet.svg","assets/character/sad-pet.svg","assets/character/sick-pet.svg","assets/character/tricks-pet.svg","assets/character/welcome-pet.svg","components/Character.js","components/LinearProgressWithLabel.js","containers/App.js","containers/Welcome.js","reportWebVitals.js","index.js"],"names":["accurateInterval","fn","time","nextAt","timeout","wrapper","Date","getTime","setTimeout","cancel","clearTimeout","timeoutID","Copyright","Typography","variant","color","align","Link","href","getFullYear","useStyles","makeStyles","theme","image","width","height","img","margin","display","maxWidth","maxHeight","Character","props","classes","useState","bornPet","src","setSrc","useEffect","deadPet","disasterPet","exercisePet","foodPet","happyPet","mischiefPet","sadPet","sickPet","tricksPet","welcomePet","forEach","Image","age","happiness","health","Zoom","in","style","transitionDelay","className","alt","name","LinearProgressWithLabel","Box","alignItems","mr","LinearProgress","minWidth","Math","round","value","root","flexGrow","justifyContent","flexDirection","paper","padding","spacing","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","avatar","secondary","main","form","marginTop","submit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","exact","path","component","history","useHistory","nameValue","setNameValue","Grid","container","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","onSubmit","event","preventDefault","push","method","TextField","fullWidth","required","id","label","autoComplete","autoFocus","onChange","target","Button","mt","setName","setAge","setHealth","hunger","setHunger","setHappiness","gameEnd","setGameEnd","dialogOpen","setDialogOpen","bannerOpen","setBannerOpen","timeoutRef","useRef","eventTimeoutRef","petName","useParams","beginLife","timeOutInfo","petDay","current","handleNextEvent","nextEvent","nextEventInfo","getNextEvent","fetch","response","json","data","console","log","prev","stayInRange","impact","handleOpenBanner","title","description","catch","error","floor","random","resetGame","stat","handleDialogClose","useCallback","text","StaticBanner","show","icon","open","undefined","Fragment","direction","ButtonGroup","aria-label","disabled","onClick","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","document","getElementById"],"mappings":"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","file":"static/js/main.9f650593.chunk.js","sourcesContent":["export const accurateInterval = function (fn, time) {\r\n  let cancel, nextAt, timeout, wrapper, timeoutID;\r\n  nextAt = new Date().getTime() + time;\r\n  timeout = null;\r\n  wrapper = function () {\r\n    nextAt += time;\r\n    timeout = setTimeout(wrapper, nextAt - new Date().getTime());\r\n    return fn();\r\n  };\r\n  cancel = function () {\r\n    return clearTimeout(timeout);\r\n  };\r\n  // eslint-disable-next-line\r\n  timeoutID = function () {\r\n    return timeout;\r\n  };\r\n  timeout = setTimeout(wrapper, nextAt - new Date().getTime());\r\n  return {\r\n    cancel: cancel,\r\n    timeoutID : timeout\r\n  };\r\n};","import Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nexport default function Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"#\">\r\n        Tamagotchi Inspired Virtual Pet Game\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/born-pet.153e1bf9.svg\";","export default __webpack_public_path__ + \"static/media/dead-pet.a5c7f1b5.svg\";","export default __webpack_public_path__ + \"static/media/disaster-pet.4ece71f2.svg\";","export default __webpack_public_path__ + \"static/media/exercise-pet.c3b2a3b4.svg\";","export default __webpack_public_path__ + \"static/media/food-pet.886e478e.svg\";","export default __webpack_public_path__ + \"static/media/happy-pet.0073bfbc.svg\";","export default __webpack_public_path__ + \"static/media/mischief-pet.e1412e66.svg\";","export default __webpack_public_path__ + \"static/media/sad-pet.746e9375.svg\";","export default __webpack_public_path__ + \"static/media/sick-pet.f617f147.svg\";","export default __webpack_public_path__ + \"static/media/tricks-pet.c92e9531.svg\";","export default __webpack_public_path__ + \"static/media/welcome-pet.3b345dac.svg\";","import React, {useState, useEffect} from 'react';\r\nimport bornPet from '../assets/character/born-pet.svg';\r\nimport deadPet from '../assets/character/dead-pet.svg';\r\nimport disasterPet from '../assets/character/disaster-pet.svg';\r\nimport exercisePet from '../assets/character/exercise-pet.svg';\r\nimport foodPet from '../assets/character/food-pet.svg';\r\nimport happyPet from '../assets/character/happy-pet.svg';\r\nimport mischiefPet from '../assets/character/mischief-pet.svg';\r\nimport sadPet from '../assets/character/sad-pet.svg';\r\nimport sickPet from '../assets/character/sick-pet.svg';\r\nimport tricksPet from '../assets/character/tricks-pet.svg';\r\nimport welcomePet from '../assets/character/welcome-pet.svg';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  image: {\r\n    width: 130,\r\n    height: 130,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n  }));\r\n\r\nexport default function Character(props) {\r\n  const classes = useStyles();\r\n  const [src, setSrc] = useState(bornPet);\r\n\r\n  useEffect(() => {\r\n    //Preloading character assets\r\n    const imageList = [bornPet, deadPet, disasterPet, exercisePet, foodPet, happyPet, mischiefPet, sadPet, sickPet, tricksPet, welcomePet]\r\n    imageList.forEach((image) => {\r\n        new Image().src = image\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.age === 0) {\r\n       setSrc(bornPet)\r\n    }else if (props.age > 3) {\r\n      if (props.happiness >= 70) {   \r\n        setSrc(happyPet)\r\n      }else if (props.happiness <= 30){\r\n        setSrc(sadPet)\r\n      }else {\r\n        setSrc(welcomePet)\r\n      }\r\n    }\r\n\r\n    if (props.health === 0) {\r\n        setSrc(deadPet)\r\n     }\r\n\r\n  }, [props.age, props.happiness, props.health]);\r\n\r\n\r\n  return (\r\n    <Zoom in={true} style={{ transitionDelay: '500ms' }}>\r\n      <img className={classes.img} alt={props.name} src={src} />\r\n    </Zoom>\r\n  );\r\n}","import Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nexport default function LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}","import React, {useState, useEffect, useRef, useCallback} from 'react';\nimport {useParams} from 'react-router-dom';\nimport {accurateInterval} from '../utils/helpers.js';\nimport Copyright from '../components/Copyright';\nimport Character from '../components/Character';\nimport LinearProgressWithLabel from '../components/LinearProgressWithLabel';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { StaticBanner } from 'material-ui-banner';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n root: {\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: '2rem auto',\n    maxWidth: 680,\n  }\n  }));\n\n\nexport default function App() {\n\nconst [name, setName] = useState('Pippin');\nconst [age, setAge] = useState(0);\nconst [health, setHealth] = useState(100);\nconst [hunger, setHunger] = useState(0);\nconst [happiness, setHappiness] = useState(100);\nconst [gameEnd, setGameEnd] = useState(false);\nconst [dialogOpen, setDialogOpen] = useState(false);\nconst [bannerOpen, setBannerOpen] = useState(false);\nconst timeoutRef = useRef();\nconst eventTimeoutRef = useRef();\nconst {petName} = useParams();\nconst classes = useStyles();\n\n\n const beginLife = () => {\n    let timeOutInfo = accurateInterval(() => {\n          petDay();\n        }, 1000) //TODO: Updatable day time - defaults to 1 sec \n    timeoutRef.current = timeOutInfo;\n    //console.log(timeoutRef.current)\n }\n\n  const handleNextEvent = (nextEvent) => {\n  \tlet nextEventInfo = accurateInterval(() => {\n          getNextEvent();\n        }, nextEvent)\n    eventTimeoutRef.current = nextEventInfo;\n    //console.log(eventTimeoutRef.current);\n  }\n\n  const getNextEvent = () => {\n  \tfetch('http://www.virtual-pet.uk/v1/event')\n\t    .then(response=> response.json())\n\t    .then(data => {\n\t    \tconsole.log(data);\n\t    \tsetHealth((prev) => stayInRange(prev + data.impact.health));\n\t\t\tsetHunger((prev) => stayInRange(prev + data.impact.hunger));\n\t\t\tsetHappiness((prev) => stayInRange(prev + data.impact.happiness));\n\t\t\thandleOpenBanner(data.title + \": \" + data.description + \" Impact, health: \" + data.impact.health + \" hunger: \" + data.impact.hunger + \" happiness: \" + data.impact.happiness);\n\t\t\tif (eventTimeoutRef.current) {\n\t\t      eventTimeoutRef.current.cancel();\n\t\t    }\n\t\t    handleNextEvent(data.nextEvent * 1000); //TO-DO: 1000 must be replaced by day value\n\t\t    setBannerOpen(false);\n\t     })\n\t    .catch(error => console.log(error)) //TODO: handle edge-case of API error\n  }\n\n const petDay = () => {\n\tsetAge((prev) => prev + 1);\n\tsetHealth((prev) => stayInRange(prev - 1));\n\tsetHunger((prev) => stayInRange(prev + 1));\n\tsetHappiness((prev) => stayInRange(prev - (Math.floor(Math.random() * 5) + 1)));\n  }\n\n  const cleanPet = () => {\n  \tif (!gameEnd) {\n  \t\tsetHealth((prev) => stayInRange(prev + 1));\n  \t}\n  }\n\n  const feedPet = () => {\n  \tif (!gameEnd) {\n  \t\tsetHunger((prev) => stayInRange(prev - 1));\n  \t}\n  }\n\n  const playPet = () => {\n  \tif (!gameEnd) {\n  \t\tsetHappiness((prev) => stayInRange(prev + (Math.floor(Math.random() * 5) + 1))); // random reduction between 1 -> 5)\n  \t}\n  }\n\n\n  const resetGame = () => {\n  \tsetAge(0);\n\tsetHealth(100);\n\tsetHunger(0);\n\tsetHappiness(100);\n\t//Cancel timers\n\tif (timeoutRef.current) {\n      timeoutRef.current.cancel();\n    }\n    if (eventTimeoutRef.current) {\n\t  eventTimeoutRef.current.cancel();\n\t}\n    setGameEnd(false);\n    setBannerOpen(false);\n    //Start life and program first event\n    beginLife();\n    handleNextEvent(5000);\n  }\n\n  //Helper functions\n  const stayInRange = (stat) => {\n  \tif (stat >= 0 && stat <= 100)\n\t    return stat;\n\t else if (stat > 100)\n\t    return 100;\n\telse\n\t    return 0;\n  }\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  const handleOpenBanner = useCallback((text) => StaticBanner.show({\n\t    icon: <div />,\n\t    open:  bannerOpen,\n\t    label: text,\n   }), [bannerOpen]);\n\n  //Effects\n\n  useEffect(() => {\n   if (health <= 0 ) {\n   \t setGameEnd(true);\n   \t setDialogOpen(true);\n   \t setBannerOpen(false);\n   \t //stop the life timer...\n   \t if (timeoutRef.current) {\n      timeoutRef.current.cancel();\n     }\n     //Stop the event timer...\n\t if (eventTimeoutRef.current) {\n\t  eventTimeoutRef.current.cancel();\n\t }\n   }\n  }, [health]);\n\n  useEffect(() => {\n\tif (petName !== undefined) {\n\t setName(petName)\n\t}\n  }, [petName]);\n\n  // Equivalent to componentDidMount(). Starts the Life timer and handles first event. Runs only once.\n  // eslint-disable-next-line\n  useEffect(() => {beginLife(); handleNextEvent(5000)}, []);\n\n  return (\n  \t<React.Fragment>\n  \t   <CssBaseline />\n  \t   <StaticBanner open={bannerOpen} />\n\t\t<Grid container component=\"main\" className={classes.root}>\n\t      <Paper className={classes.paper}>\n\t        <Grid container spacing={2}>\n\t          <Grid item xs={12} sm={12} md={6} container>\n\t            <Grid item xs container direction=\"column\" spacing={2}>\n\t              <Grid item xs>\n\t                <Typography variant=\"h2\">\n\t                  {name}\n\t                </Typography>\n\t                <Typography variant=\"h6\">\n\t                  Age: {age}\n\t                </Typography>\n\t                 <Typography variant=\"body1\">\n\t                  Health: \n\t                </Typography>\n\t                <LinearProgressWithLabel value={health} />\n\t                <Typography variant=\"body1\">\n\t                  Hunger: \n\t                </Typography>\n\t                <LinearProgressWithLabel value={hunger} />\n\t                <Typography variant=\"body1\">\n\t                  Happiness: \n\t                </Typography>\n\t                <LinearProgressWithLabel value={happiness} />\n\t                <ButtonGroup color=\"primary\" variant=\"contained\" aria-label=\"outlined primary button group\">\n\t\t\t\t\t  <Button disabled={gameEnd} onClick={cleanPet}>Clean</Button>\n\t\t\t\t\t  <Button disabled={gameEnd} onClick={feedPet}>Feed</Button>\n\t\t\t\t\t  <Button disabled={gameEnd} onClick={playPet}>Play</Button>\n\t\t\t\t\t</ButtonGroup>\n\t\t\t  \t\t<Button disabled={gameEnd} onClick={resetGame}>Reset Game</Button>\n\t              </Grid>\n\t            </Grid>\n\t          </Grid>\n\t          <Grid item xs={12} sm={12} md={6}>\n\t              <Character name={name} happiness={happiness} age={age} health={health} />\n\t          </Grid>    \n\t        </Grid>\n\t      </Paper>\n\t\t  <Copyright />\n    \t</Grid>\n    \t{gameEnd && \n    \t\t <Dialog\n\t\t        open={dialogOpen}\n\t\t        onClose={handleDialogClose}\n\t\t        aria-labelledby=\"alert-dialog-title\"\n\t\t        aria-describedby=\"alert-dialog-description\"\n\t\t      >\n\t\t        <DialogTitle id=\"alert-dialog-title\">Game Over!</DialogTitle>\n\t\t        <DialogContent>\n\t\t          <DialogContentText id=\"alert-dialog-description\">\n\t\t           Great job! Let's play again!\n\t\t          </DialogContentText>\n\t\t        </DialogContent>\n\t\t        <DialogActions>\n\t\t          <Button onClick={handleDialogClose} color=\"primary\">\n\t\t            Close\n\t\t          </Button>\n\t\t          <Button onClick={resetGame} color=\"primary\" autoFocus>\n\t\t            Start Over!\n\t\t          </Button>\n\t\t        </DialogActions>\n      \t\t</Dialog>\n    \t}\n    </React.Fragment>\n  )\n}","import welcomePet from '../assets/character/welcome-pet.svg';\nimport React, {useState} from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Copyright from '../components/Copyright';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: `url(${welcomePet})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Welcome() {\n  const history = useHistory();\n  const classes = useStyles();\n  const [nameValue, setNameValue] = useState('');\n\n  \n const handleChange = (event) => {\n    setNameValue(event.target.value);\n }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    if (nameValue !== '') {\n      history.push('/play/' + nameValue);\n    }\n  }  \n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Start your game by giving your pet a name!\n          </Typography>\n          <form className={classes.form} onSubmit={handleSubmit} method=\"post\">\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              required\n              id=\"pet-name\"\n              label=\"Your Pet Name\"\n              name=\"name\"\n              autoComplete=\"name\"\n              autoFocus\n              value={nameValue} onChange={handleChange}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Start Game!\n            </Button>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport App from './containers/App';\nimport Welcome from './containers/Welcome';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n   <HashRouter>\n\t\t<Switch>\n           <Route exact path=\"/\" component={Welcome} />\n           <Route path=\"/play/:petName?\" component={App} />\n        </Switch>\n\t</HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);"],"sourceRoot":""}