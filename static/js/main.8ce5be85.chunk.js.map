{"version":3,"sources":["assets/character/disaster-pet.svg","assets/character/exercise-pet.svg","assets/character/food-pet.svg","assets/character/mischief-pet.svg","assets/character/sick-pet.svg","assets/character/tricks-pet.svg","assets/character/welcome-pet.svg","utils/helpers.js","components/Copyright.js","assets/character/born-pet.svg","assets/character/dead-pet.svg","assets/character/happy-pet.svg","assets/character/love-pet.svg","assets/character/sad-pet.svg","assets/character/crying-pet.svg","components/Character.js","components/LinearProgressWithLabel.js","containers/App.js","containers/Welcome.js","reportWebVitals.js","index.js"],"names":["accurateInterval","fn","time","nextAt","timeout","wrapper","Date","getTime","setTimeout","cancel","clearTimeout","timeoutID","Copyright","Typography","variant","color","align","Link","href","getFullYear","useStyles","makeStyles","theme","image","width","height","img","margin","display","maxWidth","maxHeight","Character","props","classes","useState","bornPet","src","setSrc","useEffect","deadPet","happyPet","sadPet","welcomePet","lovePet","cryingPet","forEach","Image","age","happiness","health","Zoom","in","style","transitionDelay","className","alt","name","LinearProgressWithLabel","Box","alignItems","mr","LinearProgress","minWidth","Math","round","value","root","flexGrow","justifyContent","flexDirection","paper","padding","spacing","avatarLarge","stayInRange","stat","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","avatar","secondary","main","form","marginTop","submit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","exact","path","component","history","useHistory","nameValue","setNameValue","Grid","container","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","onSubmit","event","preventDefault","push","method","TextField","fullWidth","required","id","label","autoComplete","autoFocus","onChange","target","Button","mt","setName","setAge","setHealth","hunger","setHunger","setHappiness","gameEnd","setGameEnd","dialogOpen","setDialogOpen","timeoutRef","useRef","eventTimeoutRef","petName","useParams","beginLife","timeOutInfo","petDay","current","handleNextEvent","nextEvent","nextEventInfo","getNextEvent","fetch","response","json","data","prev","impact","handleOpenBanner","toUpperCase","title","description","eventType","eventGraphic","disasterPet","foodPet","mischiefPet","sickPet","tricksPet","exercisePet","getCharacter","catch","error","console","log","floor","random","resetGame","handleDialogClose","useCallback","text","eventTypeGraphic","StaticBanner","show","icon","iconProps","open","undefined","Fragment","direction","ButtonGroup","aria-label","disabled","onClick","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","document","getElementById"],"mappings":"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","file":"static/js/main.8ce5be85.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/disaster-pet.66e47975.svg\";","export default __webpack_public_path__ + \"static/media/exercise-pet.75910bf6.svg\";","export default __webpack_public_path__ + \"static/media/food-pet.9caf0685.svg\";","export default __webpack_public_path__ + \"static/media/mischief-pet.8eb9f2c1.svg\";","export default __webpack_public_path__ + \"static/media/sick-pet.756362e5.svg\";","export default __webpack_public_path__ + \"static/media/tricks-pet.bed47d2e.svg\";","export default __webpack_public_path__ + \"static/media/welcome-pet.2e06b49f.svg\";","export const accurateInterval = function (fn, time) {\r\n  let cancel, nextAt, timeout, wrapper, timeoutID;\r\n  nextAt = new Date().getTime() + time;\r\n  timeout = null;\r\n  wrapper = function () {\r\n    nextAt += time;\r\n    timeout = setTimeout(wrapper, nextAt - new Date().getTime());\r\n    return fn();\r\n  };\r\n  cancel = function () {\r\n    return clearTimeout(timeout);\r\n  };\r\n  // eslint-disable-next-line\r\n  timeoutID = function () {\r\n    return timeout;\r\n  };\r\n  timeout = setTimeout(wrapper, nextAt - new Date().getTime());\r\n  return {\r\n    cancel: cancel,\r\n    timeoutID : timeout\r\n  };\r\n};","import Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nexport default function Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"#\">\r\n        Tamagotchi Inspired Virtual Pet Game\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/born-pet.795e4fb5.svg\";","export default __webpack_public_path__ + \"static/media/dead-pet.4e5c176a.svg\";","export default __webpack_public_path__ + \"static/media/happy-pet.37a25a85.svg\";","export default __webpack_public_path__ + \"static/media/love-pet.ac68afd2.svg\";","export default __webpack_public_path__ + \"static/media/sad-pet.f8da9027.svg\";","export default __webpack_public_path__ + \"static/media/crying-pet.1173674d.svg\";","import React, {useState, useEffect} from 'react';\r\nimport bornPet from '../assets/character/born-pet.svg';\r\nimport deadPet from '../assets/character/dead-pet.svg';\r\nimport happyPet from '../assets/character/happy-pet.svg';\r\nimport lovePet from '../assets/character/love-pet.svg';\r\nimport sadPet from '../assets/character/sad-pet.svg';\r\nimport cryingPet from '../assets/character/crying-pet.svg';\r\nimport welcomePet from '../assets/character/welcome-pet.svg';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  image: {\r\n    width: 130,\r\n    height: 130,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n  }));\r\n\r\nexport default function Character(props) {\r\n  const classes = useStyles();\r\n  const [src, setSrc] = useState(bornPet);\r\n\r\n  useEffect(() => {\r\n    //Preloading character assets\r\n    const imageList = [bornPet, deadPet, happyPet, sadPet, welcomePet, lovePet, cryingPet]\r\n    imageList.forEach((image) => {\r\n        new Image().src = image\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.age === 0) {\r\n       setSrc(bornPet)\r\n    } else if (props.age > 3) {\r\n      if (props.happiness >= 70 && props.happiness <= 90) {   \r\n        setSrc(happyPet)\r\n      } else if (props.happiness <= 30 && props.happiness > 0){\r\n        setSrc(sadPet)\r\n      } else if (props.happiness > 90){\r\n        setSrc(lovePet)\r\n      } else if (props.happiness === 0) {\r\n        setSrc(cryingPet)\r\n      } else {\r\n        setSrc(welcomePet)\r\n      }\r\n    }\r\n\r\n    if (props.health === 0) {\r\n        setSrc(deadPet)\r\n     }\r\n\r\n  }, [props.age, props.happiness, props.health]);\r\n\r\n\r\n  return (\r\n    <Zoom in={true} style={{ transitionDelay: '500ms' }}>\r\n      <img className={classes.img} alt={props.name} src={src} />\r\n    </Zoom>\r\n  );\r\n}","import Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nexport default function LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}","import React, {useState, useEffect, useRef, useCallback} from 'react';\nimport disasterPet from '../assets/character/disaster-pet.svg';\nimport exercisePet from '../assets/character/exercise-pet.svg';\nimport foodPet from '../assets/character/food-pet.svg';\nimport mischiefPet from '../assets/character/mischief-pet.svg';\nimport sickPet from '../assets/character/sick-pet.svg';\nimport tricksPet from '../assets/character/tricks-pet.svg';\nimport welcomePet from '../assets/character/welcome-pet.svg';\nimport {useParams} from 'react-router-dom';\nimport {accurateInterval} from '../utils/helpers.js';\nimport Copyright from '../components/Copyright';\nimport Character from '../components/Character';\nimport LinearProgressWithLabel from '../components/LinearProgressWithLabel';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { StaticBanner } from 'material-ui-banner';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n root: {\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: '2rem auto',\n    maxWidth: 680,\n  },\n  avatarLarge: {\n  \twidth: 72,\n    height: 72,\n  }\n  }));\n\n//Helper functions\n const stayInRange = (stat) => {\n  \tif (stat >= 0 && stat <= 100)\n\t    return stat;\n\t else if (stat > 100)\n\t    return 100;\n\telse\n\t    return 0;\n  }\n\nconst getCharacter = (eventType) => {\n  \n  let eventGraphic;\n\n  switch(eventType) {\n\tcase 'Natural Disaster':\n\t\teventGraphic = disasterPet;\n\t\tbreak;\n\tcase 'Food':\n\t\teventGraphic = foodPet;\n\t\tbreak;\n\tcase 'Mischief':\n\t\teventGraphic = mischiefPet;\n\t\tbreak;\n\tcase 'Disease':\n\t\teventGraphic = sickPet;\n\t\tbreak;\n\tcase 'Tricks':\n\t\teventGraphic = tricksPet;\n\t\tbreak;\n\tcase 'Exercise':\n\t\teventGraphic = exercisePet;\n\t\tbreak;\n\tdefault:\n\t\teventGraphic = welcomePet;\n\t}\n\n\treturn eventGraphic;\n}\n\n\nexport default function App() {\n\nconst [name, setName] = useState('Pippin');\nconst [age, setAge] = useState(0);\nconst [health, setHealth] = useState(100);\nconst [hunger, setHunger] = useState(0);\nconst [happiness, setHappiness] = useState(100);\nconst [gameEnd, setGameEnd] = useState(false);\nconst [dialogOpen, setDialogOpen] = useState(false);\nconst timeoutRef = useRef();\nconst eventTimeoutRef = useRef();\nconst {petName} = useParams();\nconst classes = useStyles();\n\n\n const beginLife = () => {\n    let timeOutInfo = accurateInterval(() => {\n          petDay();\n        }, 1000) //TODO: Updatable day time - defaults to 1 sec \n    timeoutRef.current = timeOutInfo;\n    //console.log(timeoutRef.current)\n }\n\n  const handleNextEvent = (nextEvent) => {\n  \tlet nextEventInfo = accurateInterval(() => {\n          getNextEvent();\n        }, nextEvent)\n    eventTimeoutRef.current = nextEventInfo;\n    //console.log(eventTimeoutRef.current);\n  }\n\n  const getNextEvent = () => {\n  \t\n\tfetch('https://www.virtual-pet.uk/v1/event')\n\t\t.then(response=> response.json())\n\t\t.then(data => {\n\t\t    //console.log(data);\n\t\t    setHealth((prev) => stayInRange(prev + data.impact.health));\n\t\t\tsetHunger((prev) => stayInRange(prev + data.impact.hunger));\n\t\t\tsetHappiness((prev) => stayInRange(prev + data.impact.happiness));\n\t\t\thandleOpenBanner(data.type.toUpperCase() + \"! \" + data.title + \": \" + data.description + \" Impact, health: \" + data.impact.health + \" hunger: \" + data.impact.hunger + \" happiness: \" + data.impact.happiness, getCharacter(data.type));\n\t\t\tif (eventTimeoutRef.current) {\n\t\t\t    eventTimeoutRef.current.cancel();\n\t\t\t }\n\t\t\thandleNextEvent(data.nextEvent * 1000); //TO-DO: 1000 must be replaced by day value\n\t\t })\n\t\t .catch(error => console.log(error)) //TODO: handle edge-case of API error\n  }\n\n const petDay = () => {\n\tsetAge((prev) => prev + 1);\n\tsetHealth((prev) => stayInRange(prev - 1));\n\tsetHunger((prev) => stayInRange(prev + 1));\n\tsetHappiness((prev) => stayInRange(prev - (Math.floor(Math.random() * 5) + 1)));\n  }\n\n  const cleanPet = () => {\n  \tif (!gameEnd) {\n  \t\tsetHealth((prev) => stayInRange(prev + 1));\n  \t}\n  }\n\n  const feedPet = () => {\n  \tif (!gameEnd) {\n  \t\tsetHunger((prev) => stayInRange(prev - 1));\n  \t}\n  }\n\n  const playPet = () => {\n  \tif (!gameEnd) {\n  \t\tsetHappiness((prev) => stayInRange(prev + (Math.floor(Math.random() * 5) + 1))); // random reduction between 1 -> 5)\n  \t}\n  }\n\n\n  const resetGame = () => {  \t\n  \tsetAge(0);\n\tsetHealth(100);\n\tsetHunger(0);\n\tsetHappiness(100);\n\tsetGameEnd(false);\n\t//Cancel timers\n\tif (timeoutRef.current) {\n      timeoutRef.current.cancel();\n    }\n    if (eventTimeoutRef.current) {\n\t  eventTimeoutRef.current.cancel();\n\t}\n    //Start life and program first event\n    beginLife();\n    handleNextEvent(5000);\n  }\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  const handleOpenBanner = useCallback((text, eventTypeGraphic) => StaticBanner.show({\n  \t\ticon: <div />,\n  \t\ticonProps : {\n  \t\t\tsrc: eventTypeGraphic,\n  \t\t\tclassName:  classes.avatarLarge\n  \t\t},\n\t    open:  true,\n\t    label: text,\n   }), [classes.avatarLarge]);\n\n  //Effects\n\n  useEffect(() => {\n   if (health <= 0 ) {   \t \n   \t setDialogOpen(true);\n   \t //stop the life timer...\n   \t if (timeoutRef.current) {\n      timeoutRef.current.cancel();\n     }\n     //Stop the event timer...\n\t if (eventTimeoutRef.current) {\n\t  eventTimeoutRef.current.cancel();\n\t }\n\t setGameEnd(true);\n   }\n  }, [health]);\n\n  useEffect(() => {\n\tif (petName !== undefined) {\n\t setName(petName)\n\t}\n  }, [petName]);\n\n  // Equivalent to componentDidMount(). Starts the Life timer and handles first event. Runs only once.\n  // eslint-disable-next-line\n  useEffect(() => {beginLife(); handleNextEvent(5000)}, []);\n\n  return (\n  \t<React.Fragment>\n  \t   <CssBaseline />\n  \t   <StaticBanner />\n\t\t<Grid container component=\"main\" className={classes.root}>\n\t      <Paper className={classes.paper}>\n\t        <Grid container spacing={2}>\n\t          <Grid item xs={8} sm={8} md={6} container>\n\t            <Grid item xs container direction=\"column\" spacing={2}>\n\t              <Grid item xs>\n\t                <Typography variant=\"h2\">\n\t                  {name}\n\t                </Typography>\n\t                <Typography variant=\"h6\">\n\t                  Age: {age}\n\t                </Typography>\n\t                 <Typography variant=\"body1\">\n\t                  Health: \n\t                </Typography>\n\t                <LinearProgressWithLabel value={health} />\n\t                <Typography variant=\"body1\">\n\t                  Hunger: \n\t                </Typography>\n\t                <LinearProgressWithLabel value={hunger} />\n\t                <Typography variant=\"body1\">\n\t                  Happiness: \n\t                </Typography>\n\t                <LinearProgressWithLabel value={happiness} />\n\t                <ButtonGroup color=\"primary\" variant=\"contained\" aria-label=\"outlined primary button group\">\n\t\t\t\t\t  <Button disabled={gameEnd} onClick={cleanPet}>Clean</Button>\n\t\t\t\t\t  <Button disabled={gameEnd} onClick={feedPet}>Feed</Button>\n\t\t\t\t\t  <Button disabled={gameEnd} onClick={playPet}>Play</Button>\n\t\t\t\t\t</ButtonGroup>\n\t\t\t  \t\t<Button onClick={resetGame}>{gameEnd? \"Play again!\" : \"Reset Game\"}</Button>\n\t              </Grid>\n\t            </Grid>\n\t          </Grid>\n\t          <Grid item xs={4} sm={4} md={6}>\n\t              <Character name={name} happiness={happiness} age={age} health={health} />\n\t          </Grid>    \n\t        </Grid>\n\t      </Paper>\n\t\t  <Copyright />\n    \t</Grid>\n    \t{gameEnd && \n    \t\t <Dialog\n\t\t        open={dialogOpen}\n\t\t        onClose={handleDialogClose}\n\t\t        aria-labelledby=\"alert-dialog-title\"\n\t\t        aria-describedby=\"alert-dialog-description\"\n\t\t      >\n\t\t        <DialogTitle id=\"alert-dialog-title\">Game Over.</DialogTitle>\n\t\t        <DialogContent>\n\t\t          <DialogContentText id=\"alert-dialog-description\">\n\t\t           Great job! Let's play again!\n\t\t          </DialogContentText>\n\t\t        </DialogContent>\n\t\t        <DialogActions>\n\t\t          <Button onClick={handleDialogClose} color=\"primary\">\n\t\t            Close\n\t\t          </Button>\n\t\t          <Button onClick={resetGame} color=\"primary\" autoFocus>\n\t\t            Start Over!\n\t\t          </Button>\n\t\t        </DialogActions>\n      \t\t</Dialog>\n    \t}\n    </React.Fragment>\n  )\n}","import welcomePet from '../assets/character/welcome-pet.svg';\nimport React, {useState} from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Copyright from '../components/Copyright';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: `url(${welcomePet})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Welcome() {\n  const history = useHistory();\n  const classes = useStyles();\n  const [nameValue, setNameValue] = useState('');\n\n  \n const handleChange = (event) => {\n    setNameValue(event.target.value);\n }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    if (nameValue !== '') {\n      history.push('/play/' + nameValue);\n    }\n  }  \n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Start your game by giving your pet a name!\n          </Typography>\n          <form className={classes.form} onSubmit={handleSubmit} method=\"post\">\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              required\n              id=\"pet-name\"\n              label=\"Your Pet Name\"\n              name=\"name\"\n              autoComplete=\"name\"\n              autoFocus\n              value={nameValue} onChange={handleChange}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Start Game!\n            </Button>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport App from './containers/App';\nimport Welcome from './containers/Welcome';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n   <HashRouter>\n\t\t<Switch>\n           <Route exact path=\"/\" component={Welcome} />\n           <Route path=\"/play/:petName?\" component={App} />\n        </Switch>\n\t</HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);"],"sourceRoot":""}