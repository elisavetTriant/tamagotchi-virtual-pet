{"version":3,"sources":["assets/character/welcome-pet.svg","containers/App.js","containers/Welcome.js","reportWebVitals.js","index.js","utils/helpers.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","alignItems","justifyContent","flexDirection","paper","padding","spacing","margin","maxWidth","image","width","height","img","display","maxHeight","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","LinearProgressWithLabel","props","Box","mr","LinearProgress","minWidth","Math","round","value","backgroundImage","welcomePet","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","avatar","secondary","main","form","marginTop","submit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","exact","path","component","history","useHistory","classes","useState","nameValue","setNameValue","Grid","container","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","onSubmit","event","preventDefault","push","method","TextField","fullWidth","required","id","label","name","autoComplete","autoFocus","onChange","target","Button","mt","setName","age","setAge","health","setHealth","hunger","setHunger","happiness","setHappiness","gameEnd","setGameEnd","dialogOpen","setDialogOpen","timeoutRef","useRef","petName","useParams","beginLife","timeOutInfo","fn","time","nextAt","timeout","wrapper","getTime","setTimeout","cancel","clearTimeout","timeoutID","accurateInterval","petDay","current","prev","stayInRange","floor","random","resetGame","stat","handleDialogClose","useEffect","undefined","Fragment","direction","ButtonGroup","aria-label","disabled","onClick","alt","src","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.01e8fd18.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/welcome-pet.3b345dac.svg\";","import welcomePet from '../assets/character/welcome-pet.svg';\nimport React, {useState, useEffect, useRef} from 'react';\nimport {useParams} from 'react-router-dom';\nimport {accurateInterval} from '../utils/helpers.js';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n root: {\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: '2rem auto',\n    maxWidth: 680,\n  },\n  image: {\n    width: 128,\n    height: 128,\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n  }));\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"#\">\n        Tamagotchi Inspired Virtual Pet Game\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nexport default function App() {\n\nconst [name, setName] = useState('Pippin');\nconst [age, setAge] = useState(0);\nconst [health, setHealth] = useState(100);\nconst [hunger, setHunger] = useState(0);\nconst [happiness, setHappiness] = useState(100);\nconst [gameEnd, setGameEnd] = useState(false);\nconst [dialogOpen, setDialogOpen] = useState(false);\nconst timeoutRef = useRef();\nconst {petName} = useParams();\nconst classes = useStyles();\n\n\n const beginLife = () => {\n    let timeOutInfo = accurateInterval(() => {\n          petDay();\n        }, 1000) //TODO: Updatable day time - defaults to 1 sec \n    timeoutRef.current = timeOutInfo;\n }\n\n const petDay = () => {\n\tsetAge((prev) => prev + 1);\n\tsetHealth((prev) => stayInRange(prev - 1));\n\tsetHunger((prev) => stayInRange(prev + 1));\n\tsetHappiness((prev) => stayInRange(prev - (Math.floor(Math.random() * 5) + 1)));\n  }\n\n  const cleanPet = () => {\n  \tif (!gameEnd) {\n  \t\tsetHealth((prev) => stayInRange(prev + 1));\n  \t}\n  }\n\n  const feedPet = () => {\n  \tif (!gameEnd) {\n  \t\tsetHunger((prev) => stayInRange(prev - 1));\n  \t}\n  }\n\n  const playPet = () => {\n  \tif (!gameEnd) {\n  \t\tsetHappiness((prev) => stayInRange(prev + (Math.floor(Math.random() * 5) + 1))); // random reduction between 1 -> 5)\n  \t}\n  }\n\n  const resetGame = () => {\n  \tsetAge(0);\n\tsetHealth(100);\n\tsetHunger(0);\n\tsetHappiness(100);\n\tif (timeoutRef.current) {\n      timeoutRef.current.cancel();\n    }\n    setGameEnd(false);\n    beginLife();\n  }\n\n  //Helper functions\n  const stayInRange = (stat) => {\n  \tif (stat >= 0 && stat <= 100)\n\t    return stat;\n\t else if (stat > 100)\n\t    return 100;\n\telse\n\t    return 0;\n  }\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n\n  //Effects\n\n  useEffect(() => {\n   if (health <= 0 ) {\n   \t setGameEnd(true);\n   \t setDialogOpen(true);\n   \t //stop the life timer...\n   \t if (timeoutRef.current) {\n      timeoutRef.current.cancel();\n    }\n   }\n  }, [health]);\n\n  useEffect(() => {\n\tif (petName !== undefined) {\n\t setName(petName)\n\t}\n  }, [petName]);\n\n  // Equivalent to componentDidMount(). Starts the Life timer. Runs only once.\n  // eslint-disable-next-line\n  useEffect(() => {beginLife()}, []);\n\n  return (\n  \t<React.Fragment>\n  \t   <CssBaseline />\n\t\t<Grid container component=\"main\" className={classes.root}>\n\t      <Paper className={classes.paper}>\n\t        <Grid container spacing={2}>\n\t          <Grid item xs={12} sm={12} md={6} container>\n\t            <Grid item xs container direction=\"column\" spacing={2}>\n\t              <Grid item xs>\n\t                <Typography variant=\"h2\">\n\t                  {name}\n\t                </Typography>\n\t                <Typography variant=\"h6\">\n\t                  Age: {age}\n\t                </Typography>\n\t                 <Typography variant=\"body1\">\n\t                  Health: \n\t                </Typography>\n\t                <LinearProgressWithLabel value={health} />\n\t                <Typography variant=\"body1\">\n\t                  Hunger: \n\t                </Typography>\n\t                <LinearProgressWithLabel value={hunger} />\n\t                <Typography variant=\"body1\">\n\t                  Happiness: \n\t                </Typography>\n\t                <LinearProgressWithLabel value={happiness} />\n\t                <ButtonGroup color=\"primary\" variant=\"contained\" aria-label=\"outlined primary button group\">\n\t\t\t\t\t  <Button disabled={gameEnd} onClick={cleanPet}>Clean</Button>\n\t\t\t\t\t  <Button disabled={gameEnd} onClick={feedPet}>Feed</Button>\n\t\t\t\t\t  <Button disabled={gameEnd} onClick={playPet}>Play</Button>\n\t\t\t\t\t</ButtonGroup>\n\t\t\t  \t\t<Button disabled={gameEnd} onClick={resetGame}>Reset Game</Button>\n\t              </Grid>\n\t            </Grid>\n\t          </Grid>\n\t          <Grid item xs={12} sm={12} md={6}>\n\t              <img className={classes.img} alt={name} src={welcomePet} />\n\t          </Grid>    \n\t        </Grid>\n\t      </Paper>\n\t\t  <Copyright />\n    \t</Grid>\n    \t{gameEnd && \n    \t\t <Dialog\n\t\t        open={dialogOpen}\n\t\t        onClose={handleDialogClose}\n\t\t        aria-labelledby=\"alert-dialog-title\"\n\t\t        aria-describedby=\"alert-dialog-description\"\n\t\t      >\n\t\t        <DialogTitle id=\"alert-dialog-title\">Game Over!</DialogTitle>\n\t\t        <DialogContent>\n\t\t          <DialogContentText id=\"alert-dialog-description\">\n\t\t           Great job! Let's play again!\n\t\t          </DialogContentText>\n\t\t        </DialogContent>\n\t\t        <DialogActions>\n\t\t          <Button onClick={handleDialogClose} color=\"primary\">\n\t\t            Close\n\t\t          </Button>\n\t\t          <Button onClick={resetGame} color=\"primary\" autoFocus>\n\t\t            Start Over!\n\t\t          </Button>\n\t\t        </DialogActions>\n      \t\t</Dialog>\n    \t}\n    </React.Fragment>\n  )\n}","import welcomePet from '../assets/character/welcome-pet.svg';\nimport React, {useState} from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"#\">\n        Tamagotchi Inspired Virtual Pet Game\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: `url(${welcomePet})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Welcome() {\n  const history = useHistory();\n  const classes = useStyles();\n  const [nameValue, setNameValue] = useState('');\n\n  \n const handleChange = (event) => {\n    setNameValue(event.target.value);\n }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    if (nameValue !== '') {\n      history.push('/play/' + nameValue);\n    }\n  }  \n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Start your game by giving your pet a name!\n          </Typography>\n          <form className={classes.form} onSubmit={handleSubmit} method=\"post\">\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              required\n              id=\"pet-name\"\n              label=\"Your Pet Name\"\n              name=\"name\"\n              autoComplete=\"name\"\n              autoFocus\n              value={nameValue} onChange={handleChange}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Start Game!\n            </Button>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport App from './containers/App';\nimport Welcome from './containers/Welcome';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n   <HashRouter>\n\t\t<Switch>\n           <Route exact path=\"/\" component={Welcome} />\n           <Route path=\"/play/:petName?\" component={App} />\n        </Switch>\n\t</HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);","export const accurateInterval = function (fn, time) {\r\n  let cancel, nextAt, timeout, wrapper, timeoutID;\r\n  nextAt = new Date().getTime() + time;\r\n  timeout = null;\r\n  wrapper = function () {\r\n    nextAt += time;\r\n    timeout = setTimeout(wrapper, nextAt - new Date().getTime());\r\n    return fn();\r\n  };\r\n  cancel = function () {\r\n    return clearTimeout(timeout);\r\n  };\r\n  // eslint-disable-next-line\r\n  timeoutID = function () {\r\n    return timeout;\r\n  };\r\n  timeout = setTimeout(wrapper, nextAt - new Date().getTime());\r\n  return {\r\n    cancel: cancel,\r\n    timeoutID : timeout\r\n  };\r\n};"],"sourceRoot":""}